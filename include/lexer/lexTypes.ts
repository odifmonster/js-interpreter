export const OTHER = Symbol("[[OTHER]]");

export type TransVal = {
  consume: boolean;
  nextState?: LexerState;
  retVal?: TokenKind;
};

export type TransFunc = {
  [key in LexerState]: {
    [key: string]: TransVal;
    [OTHER]: TransVal;
  };
};

export type ReservedMap = Record<string, TokenKind>;

export type Token = { kind: TokenKind; value: string; };

// GENERATED BY src/generators/genlexer.py

export type LexerState = "num0" | "star" | "ident" | "float" | "tok"
    | "end_float" | "num1";

export type TokenKind = "PLUS" | "MODULO" | "LPAREN" | "STAR1" | "NUMBER"
    | "MINUS" | "STAR2" | "RPAREN" | "SLASH" | "ERROR"
    | "IDENT" | "START";